buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "org.grails.plugins:views-gradle:1.2.9"
    }
}

version "1.0.12"
group "PhoneInterface"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin:"org.grails.plugins.views-json"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    //Custom dependencies
    compile name: "asterisk-java"
    compile name: "QueryTool"
    compile name: "json-simple-1.1"
    compile name: "javax.mail"
    compile name: "jsch-0.1.54"
    compile name: "SimplifiedContact-1.0"
    compile 'org.grails.plugins:spring-security-core:3.2.3'
    runtime "org.postgresql:postgresql:9.4.1212"

    //Default 3.3.9 dependencies
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:gsp"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.16.Final"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}


assets {
    minifyOptions = [languageMode: 'ES6', targetLanguageMode: 'ES6']
    minifyJs = true
    minifyCss = true
}


/**
 * Build a version number for the application, using the SVN revision number if it is passed.
 * The version number is read from the "version" property above
 * The SVN revision number can be passed with "-Dsvn.revision=..." on the command line.
 * The build number can be passed with "-Dbuild.number=..." on the command line.
 *
 * Also set the WAR name to be based on the "war.name" property (-Dwar.name=...).  The
 * generated WAR name will not contain the version number.
 */
task addRevisionNumber() {

    String versionString = version

    // build number
    String buildNumberProperty = 'build.number'
    String buildNumber = System.getProperty(buildNumberProperty)
    if (buildNumber) {
        versionString += ".$buildNumber"
    }
    else {
        // skip the build number
    }

    String revisionNumberProperty = 'svn.revision'
    String revisionNumber = System.getProperty(revisionNumberProperty)
    if (revisionNumber) {
        versionString += ".$revisionNumber"
    }
    else {
        // skip the revision number
    }

    // war name
    String warName = System.getProperty('war.name') ?: 'ROOT'


    war {
        archiveName="${warName}.war"
        manifest {
            attributes "Implementation-Version": versionString
        }
    }
}

tasks.war.dependsOn(addRevisionNumber)

//war {
//    rootSpec.exclude "**/*.jar"
//}

// war.archiveName "ROOT.war"
